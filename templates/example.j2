{# configure how this looks in HTML using Jinja2 template #}

{# you can put regular python referring to the 'example' variable here. #}
{#<pre> {{ example.json_str()}} </pre>#}
{#TODO: need to figure out how to identify the correct param, maybe need to loop#}
 <h1> Instructions </h1>
 <p> Below you will find the function header as written in a prototype or definition. 
 Please label the given parameter with the buttons below.
 The function prototype and definition can be found at the given Github links below, please look over both before labeling.
 <mark>ENSURE THAT ANY SOURCE CODE YOU EXAMINE ON GITHUB IS PART OF LINUX RELEASE 5.16.</mark>
 When labeling, please label corresponding to your confidence in a given label. Mutability is defined as whether or not 
 the underlying value of the parameter is augemented in the course of the function. Another way of thinking of it is in a read/write binary, 
 where parameters which are immutable are read-only and those that are mutable must be able to be written to. If a parameter's value is changed
 in the function, it is mutable. If its value does not change during the course of the function, it is immutable.
 When labeling, please accurately convey your confidence in your assigned classification. The labels below range on a scale of confidence.
 If, at any point, you make an error or mislabel, you can always use the text box marker 'Other' to make a notation of it. 
 </p>
 <h1> Labeling Task </h1>
 <h3> Please label the parameter <code> {{example.features.target_param}} </code> in the function header </h3>
 <h3>
    <code>
 {{example.features.func_prototype}} 
 </code>
 </h3>
 <h3> Find the function prototype at this <a href="{{example.features.prototype_location_gh}}" target="_blank" >Github Link</a> and the function definition at this <a href="{{example.features.function_location_gh}}" target="_blank">Github Link</a></h3>